// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  publicId     String     @unique @default(uuid())
  pegawai      Pegawai    @relation(fields: [pegawaiId], references: [id])
  pegawaiId    Int        @unique
  groupAkses   GroupAkses @relation(fields: [groupAksesId], references: [id])
  groupAksesId Int
  listAkses    String[]
  listProgram  String[]
  email        String     @unique @db.VarChar(100)
  username     String     @unique @db.VarChar(20)
  password     String?
  salt         String?
  refreshToken String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?
}

model AuthLog {
  id     Int      @id @default(autoincrement())
  userId Int?
  ip     String?
  status Boolean  @default(false)
  time   DateTime @default(now())
}

model Pegawai {
  id                Int       @id @default(autoincrement())
  publicId          String    @default(uuid())
  user              User?
  cabang            Cabang    @relation(fields: [cabangId], references: [id])
  cabangId          Int
  kode              String    @unique @db.VarChar(9)
  nama              String    @db.VarChar(100)
  alamat            String    @db.VarChar(255)
  tglLahir          DateTime  @db.Date
  telp              String    @unique
  email             String    @unique
  tglMasuk          DateTime  @db.Date
  tglKontrakPertama DateTime  @db.Date
  tglKeluar         DateTime? @db.Date
  jabatan           String    @db.VarChar(50)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  deletedAt         DateTime?
}

model Cabang {
  id        Int       @id @default(autoincrement())
  publicId  String    @unique @default(uuid())
  kode      String    @db.VarChar(3)
  nama      String    @db.VarChar(100)
  alamat    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  Pegawai   Pegawai[]
}

model Program {
  id         Int       @id @default(autoincrement())
  publicId   String    @default(uuid())
  kode       String    @unique @db.VarChar(20)
  nama       String    @unique @db.VarChar(100)
  keterangan String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  Akses      Akses[]
}

model Akses {
  id        Int       @id @default(autoincrement())
  publicId  String    @default(uuid())
  program   Program   @relation(fields: [programId], references: [id])
  programId Int
  akses     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model GroupAkses {
  id         Int       @id @default(autoincrement())
  publicId   String    @default(uuid())
  nama       String    @unique @db.VarChar(30)
  keterangan String    @db.VarChar(255)
  listAkses  String[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  User       User[]
}
